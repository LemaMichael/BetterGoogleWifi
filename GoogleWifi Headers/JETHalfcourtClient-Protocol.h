//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class GTLRAccesspoints_BlockingSchedule, GTLRAccesspoints_DataCollectionSettings, GTLRAccesspoints_DefaultPrioritizedStation, GTLRAccesspoints_DnsConfig, GTLRAccesspoints_ExposedPort, GTLRAccesspoints_FamilyHubPolicy, GTLRAccesspoints_InsightAction, GTLRAccesspoints_LightingSettings, GTLRAccesspoints_PortForwardingMapping, GTLRAccesspoints_PrioritizedStation, GTLRAccesspoints_StaticIpMapping, GTLRAccesspoints_StationSet, GTLRAccesspoints_WirelessConfig, GTLRDateTime, NSArray, NSData, NSDate, NSString;

@protocol JETHalfcourtClient

@optional
@property(nonatomic) double timeoutInterval;
- (void)getAPSoftwareStatusForVersion:(NSString *)arg1 hardwareId:(NSString *)arg2 withCompletion:(void (^)(_Bool, NSError *))arg3;
- (void)createDraftAccessPointInGroupWithID:(NSString *)arg1 roomTypeString:(NSString *)arg2 roomNameIfCustom:(NSString *)arg3 SSID:(NSString *)arg4 PSK:(NSString *)arg5 withCompletion:(void (^)(NSError *))arg6;
- (void)oobeFinishedForGroupID:(NSString *)arg1 completion:(void (^)(NSError *))arg2;
- (void)getOOBEFlowForVersion:(NSString *)arg1 modelManifestId:(NSString *)arg2 inGroup:(NSString *)arg3 completion:(void (^)(long long))arg4;
- (void)createAccessPointInGroup:(NSString *)arg1 withAPIdentifier:(NSString *)arg2 certificateData:(NSData *)arg3 chainData:(NSData *)arg4 signatureTimestamp:(long long)arg5 signedAPIdentifier:(NSData *)arg6 completion:(void (^)(NSString *, NSError *))arg7;
- (void)updateLANAddressesInGroup:(NSString *)arg1 LANIP:(NSString *)arg2 LANSubnetMask:(NSString *)arg3 DHCPPoolBegin:(NSString *)arg4 DHCPPoolEnd:(NSString *)arg5 completion:(void (^)(GTLRAccesspoints_UpdateLanAddressesResponse *, NSError *))arg6;
- (void)fetchUsageForStationSetWithID:(NSString *)arg1 inGroupWithID:(NSString *)arg2 fromDate:(NSDate *)arg3 toDate:(NSDate *)arg4 withSecondsPerWindow:(long long)arg5 completion:(void (^)(GTLRAccesspoints_GetStationActivityResponse *, NSError *))arg6;
- (void)deleteContentFilteringPolicyWithID:(NSString *)arg1 inGroupWithID:(NSString *)arg2 completion:(void (^)(NSError *))arg3;
- (void)updateContentFilteringPolicies:(NSArray *)arg1 inGroupWithID:(NSString *)arg2 completion:(void (^)(NSError *))arg3;
- (void)createContentFilteringPolicies:(NSArray *)arg1 inGroupWithID:(NSString *)arg2 completion:(void (^)(NSError *))arg3;
- (void)deleteBlockingScheduleInGroup:(NSString *)arg1 withSchedule:(GTLRAccesspoints_BlockingSchedule *)arg2 completion:(void (^)(NSError *))arg3;
- (void)updateBlockingScheduleInGroup:(NSString *)arg1 withSchedule:(GTLRAccesspoints_BlockingSchedule *)arg2 completion:(void (^)(NSError *))arg3;
- (void)createBlockingScheduleInGroup:(NSString *)arg1 withSchedule:(GTLRAccesspoints_BlockingSchedule *)arg2 completion:(void (^)(NSError *))arg3;
- (void)rebootGroupWhenUpdateReady:(NSString *)arg1 withCompletionHandler:(void (^)(NSError *))arg2;
- (void)createBlockingPolicyInGroup:(NSString *)arg1 withPolicy:(GTLRAccesspoints_FamilyHubPolicy *)arg2 completion:(void (^)(GTLRAccesspoints_UpdateStationBlockingResponse *, NSError *))arg3;
- (void)deleteStationSetInGroup:(NSString *)arg1 withSetID:(NSString *)arg2 completion:(void (^)(GTLRAccesspoints_DeleteStationSetResponse *, NSError *))arg3;
- (void)updateStationSetInGroup:(NSString *)arg1 withSet:(GTLRAccesspoints_StationSet *)arg2 completion:(void (^)(GTLRAccesspoints_UpdateStationSetResponse *, NSError *))arg3;
- (void)createStationSetInGroup:(NSString *)arg1 withSet:(GTLRAccesspoints_StationSet *)arg2 completion:(void (^)(GTLRAccesspoints_CreateStationSetResponse *, NSError *))arg3;
- (void)getHardwareBundleSetupInfoForAP:(NSString *)arg1 withCompletion:(void (^)(NSDictionary *, NSError *))arg2;
- (void)updateRoomAssignmentForAP:(NSString *)arg1 roomType:(NSString *)arg2 name:(NSString *)arg3 withCompletion:(void (^)(NSError *))arg4;
- (void)updateInsightActionForGroup:(NSString *)arg1 insightCardID:(NSString *)arg2 insightAction:(GTLRAccesspoints_InsightAction *)arg3 lastUserActionTime:(GTLRDateTime *)arg4 withCompletion:(void (^)(GTLRAccesspoints_UpdateInsightActionResponse *, NSError *))arg5;
- (void)getWifiblasterSpeedTestResultsForGroup:(NSString *)arg1 AP:(NSString *)arg2 oldestResultTimestamp:(NSDate *)arg3 withCompletion:(void (^)(GTLRAccesspoints_GetWifiblasterSpeedTestResultsResponse *, NSError *))arg4;
- (void)runWifiblasterSpeedTestFromStationIDs:(NSArray *)arg1 toAP:(NSString *)arg2 withCompletion:(void (^)(GTLRAccesspoints_StartWifiblasterSpeedTestResponse *, NSError *))arg3;
- (void)getMeshConfigurationForGroup:(NSString *)arg1 withCompletion:(void (^)(NSString *, NSError *))arg2;
- (void)getMeshSpeedTestResultsForGroup:(NSString *)arg1 clientAP:(NSString *)arg2 serverAP:(NSString *)arg3 withCompletion:(void (^)(NSArray *, NSError *))arg4;
- (void)runMeshSpeedTestFromClientAP:(NSString *)arg1 toServerAP:(NSString *)arg2 withCompletion:(void (^)(_TtC66googlemac_iPhone_Access_Jetstream_Classes_APIClients_Shared_Shared26AccessPointServerOperation *, NSError *))arg3;
- (void)enableMeshOnGroup:(NSString *)arg1 withCompletion:(void (^)(_TtC66googlemac_iPhone_Access_Jetstream_Classes_APIClients_Shared_Shared26AccessPointServerOperation *, NSError *))arg2;
- (void)fetchStatusForGroup:(NSString *)arg1 withCompletion:(void (^)(NSArray *, long long, NSError *))arg2;
- (void)fetchStationListForGroup:(NSString *)arg1 withCompletion:(void (^)(GTLRAccesspoints_ListStationsResponse *, NSError *))arg2;
- (void)fetchBackhaulTypesOfChildNodesForGroup:(NSString *)arg1 withCompletionHandler:(void (^)(GTLRAccesspoints_GetBackhaulOfChildNodesResponse *, NSError *))arg2;
- (void)resendDoubleOptInConfirmationEmailWithCompletionHandler:(void (^)(NSError *))arg1;
- (void)fetchUserPreferencesWithCompletionHandler:(void (^)(GTLRAccesspoints_GetUserPreferencesResponse *, NSError *))arg1;
- (void)updateUserPreferencesWithOfferEmailsEnabled:(_Bool)arg1 updateEmailsEnabled:(_Bool)arg2 withCompletionHandler:(void (^)(NSError *))arg3;
- (void)deleteStationNameForGroup:(NSString *)arg1 stationID:(NSString *)arg2 completionHandler:(void (^)(GTLRAccesspoints_DeleteStationNameResponse *, NSError *))arg3;
- (void)updateGroup:(NSString *)arg1 stationID:(NSString *)arg2 name:(NSString *)arg3 completionHandler:(void (^)(GTLRAccesspoints_UpdateStationNameResponse *, NSError *))arg4;
- (void)updateGroup:(NSString *)arg1 guestNetworkEnabled:(_Bool)arg2 SSID:(NSString *)arg3 PSK:(NSString *)arg4 sharedStationIDs:(NSArray *)arg5 welcomeMatTitle:(NSString *)arg6 welcomeMatEnabled:(_Bool)arg7 withCompletionHandler:(void (^)(GTLRAccesspoints_UpdateGuestWirelessConfigResponse *, NSError *))arg8;
- (void)updateGroup:(NSString *)arg1 defaultPrioritizedStation:(GTLRAccesspoints_DefaultPrioritizedStation *)arg2 withCompletionHandler:(void (^)(GTLRAccesspoints_UpdateDefaultPrioritizedStationResponse *, NSError *))arg3;
- (void)startWANSpeedTestOnGroup:(NSString *)arg1 withCompletionHandler:(void (^)(GTLRAccesspoints_StartWanSpeedTestResponse *, NSError *))arg2;
- (void)getPSKsFromOperation:(NSString *)arg1 withCompletionHandler:(void (^)(GTLRAccesspoints_GetPsksResponse *, NSError *))arg2;
- (void)startGetPSKsFromGroup:(NSString *)arg1 withCompletionHandler:(void (^)(GTLRAccesspoints_CreateOperationForGetPsksResponse *, NSError *))arg2;
- (void)listSensitiveInfoWithOperationId:(NSString *)arg1 completionHandler:(void (^)(GTLRAccesspoints_ListSensitiveInfoResponse *, NSError *))arg2;
- (void)startListSensitiveInfoForGroup:(NSString *)arg1 stationIDs:(NSArray *)arg2 withCompletionHandler:(void (^)(GTLRAccesspoints_CreateOperationForListSensitiveInfoResponse *, NSError *))arg3;
- (void)uploadLogsFromGroup:(NSString *)arg1 reportID:(NSString *)arg2 completionHandler:(void (^)(GTLRAccesspoints_StartGroupLogUploadResponse *, NSError *))arg3;
- (void)updateGroup:(NSString *)arg1 removeExposedPort:(GTLRAccesspoints_ExposedPort *)arg2 withCompletionHandler:(void (^)(GTLRAccesspoints_DeleteExposedPortResponse *, NSError *))arg3;
- (void)updateGroup:(NSString *)arg1 addExposedPort:(GTLRAccesspoints_ExposedPort *)arg2 withCompletionHandler:(void (^)(GTLRAccesspoints_CreateExposedPortResponse *, NSError *))arg3;
- (void)updateGroup:(NSString *)arg1 removePortForwardingMapping:(GTLRAccesspoints_PortForwardingMapping *)arg2 withCompletionHandler:(void (^)(GTLRAccesspoints_DeletePortForwardingResponse *, NSError *))arg3;
- (void)updateGroup:(NSString *)arg1 addPortForwardingMapping:(GTLRAccesspoints_PortForwardingMapping *)arg2 withCompletionHandler:(void (^)(GTLRAccesspoints_CreatePortForwardingResponse *, NSError *))arg3;
- (void)updateAccessPoint:(NSString *)arg1 lightingConfig:(GTLRAccesspoints_LightingSettings *)arg2 withCompletionHandler:(void (^)(GTLRAccesspoints_UpdateLightingResponse *, NSError *))arg3;
- (void)updateGroup:(NSString *)arg1 staticIpMapping:(GTLRAccesspoints_StaticIpMapping *)arg2 withCompletionHandler:(void (^)(GTLRAccesspoints_UpdateStationStaticIpResponse *, NSError *))arg3;
- (void)updateGroup:(NSString *)arg1 autoUpdateChannel:(NSString *)arg2 withCompletionHandler:(void (^)(GTLRAccesspoints_UpdateApSoftwareChannelResponse *, NSError *))arg3;
- (void)removePriorityStationFromGroup:(NSString *)arg1 withCompletionHandler:(void (^)(GTLRAccesspoints_DeletePrioritizedStationResponse *, NSError *))arg2;
- (void)updateGroup:(NSString *)arg1 priorityStation:(GTLRAccesspoints_PrioritizedStation *)arg2 withCompletionHandler:(void (^)(GTLRAccesspoints_UpdatePrioritizedStationResponse *, NSError *))arg3;
- (void)updateGroup:(NSString *)arg1 UPnPEnabled:(_Bool)arg2 withCompletionHandler:(void (^)(GTLRAccesspoints_UpdateUpnpConfigResponse *, NSError *))arg3;
- (void)updateGroup:(NSString *)arg1 ipv6Enabled:(_Bool)arg2 withCompletionHandler:(void (^)(GTLRAccesspoints_UpdateIpv6ConfigResponse *, NSError *))arg3;
- (void)restartAccessPoint:(NSString *)arg1 withCompletionHandler:(void (^)(GTLRAccesspoints_RebootApResponse *, NSError *))arg2;
- (void)restartGroup:(NSString *)arg1 withCompletionHandler:(void (^)(GTLRAccesspoints_RebootGroupResponse *, NSError *))arg2;
- (void)enableLocalSpeedTestForAccessPoint:(NSString *)arg1 withCompletionHandler:(void (^)(_TtC66googlemac_iPhone_Access_Jetstream_Classes_APIClients_Shared_Shared26AccessPointServerOperation *, NSError *))arg2;
- (void)listReleaseNotesForAPVersion:(NSString *)arg1 groupID:(NSString *)arg2 count:(long long)arg3 withCompletion:(void (^)(GTLRAccesspoints_ListReleaseNotesResponse *, NSError *))arg4;
- (void)updateAccessPoint:(NSString *)arg1 bridgeModeEnabled:(_Bool)arg2 withCompletionHandler:(void (^)(GTLRAccesspoints_UpdateBridgeModeResponse *, NSError *))arg3;
- (void)updateGroup:(NSString *)arg1 dnsConfig:(GTLRAccesspoints_DnsConfig *)arg2 withCompletionHandler:(void (^)(GTLRAccesspoints_UpdateDnsResponse *, NSError *))arg3;
- (void)removeManager:(NSString *)arg1 fromGroup:(NSString *)arg2 withCompletionHandler:(void (^)(NSError *))arg3;
- (void)addManager:(NSString *)arg1 toGroup:(NSString *)arg2 withCompletionHandler:(void (^)(NSError *))arg3;
- (void)getSpeedTestResultsForGroup:(NSString *)arg1 withMaxResultCount:(long long)arg2 oldestResultTimestamp:(NSDate *)arg3 completionHandler:(void (^)(GTLRAccesspoints_GetSpeedTestResultsResponse *, NSError *))arg4;
- (void)getHistoricalUsageForGroup:(NSString *)arg1 startTime:(NSDate *)arg2 endTime:(NSDate *)arg3 granularity:(long long)arg4 withCompletionHandler:(void (^)(GTLRAccesspoints_GetHistoricalUsageResponse *, NSError *))arg5;
- (void)getRealtimeMetricsForGroup:(NSString *)arg1 withCompletionHandler:(void (^)(GTLRAccesspoints_GetRealtimeMetricsResponse *, NSError *))arg2;
- (void)dismissInsightForGroup:(NSString *)arg1 insightCardID:(NSString *)arg2 withCompletionHandler:(void (^)(GTLRAccesspoints_DeleteInsightCardResponse *, NSError *))arg3;
- (void)getInsightCardForGroup:(NSString *)arg1 insightCardID:(NSString *)arg2 withCompletionHandler:(void (^)(GTLRAccesspoints_GetInsightCardResponse *, NSError *))arg3;
- (void)getInsightsForGroup:(NSString *)arg1 handler:(void (^)(GTLRAccesspoints_ListInsightCardsResponse *, NSError *))arg2;
- (void)fetchDeviceRegistrationTicketWithGroup:(NSString *)arg1 completionHandler:(void (^)(_TtC66googlemac_iPhone_Access_Jetstream_Classes_APIClients_Shared_Shared18RegistrationTicket *, NSError *))arg2;
- (void)unclaimGroup:(NSString *)arg1 completionHandler:(void (^)(NSError *))arg2;
- (void)unclaimAccessPoint:(NSString *)arg1 completionHandler:(void (^)(NSError *))arg2;
- (void)waitForCompletionOfOperation:(NSString *)arg1 handler:(void (^)(NSError *))arg2;
- (void)getOperationStatus:(NSString *)arg1 completionHandler:(void (^)(GTLRAccesspoints_GetOperationStateResponse *, NSError *))arg2;
- (void)fetchGroup:(NSString *)arg1 completionHandler:(void (^)(GTLRAccesspoints_GetGroupResponse *, NSError *))arg2;
- (void)updateGroup:(NSString *)arg1 wirelessConfig:(GTLRAccesspoints_WirelessConfig *)arg2 completionHandler:(void (^)(_TtC66googlemac_iPhone_Access_Jetstream_Classes_APIClients_Shared_Shared26AccessPointServerOperation *, NSError *))arg3;
- (void)updateGroup:(NSString *)arg1 optInConfig:(GTLRAccesspoints_DataCollectionSettings *)arg2 completionHandler:(void (^)(_TtC66googlemac_iPhone_Access_Jetstream_Classes_APIClients_Shared_Shared26AccessPointServerOperation *, NSError *))arg3;
- (void)fetchGroupsWithCompletionHandler:(void (^)(GTLRAccesspoints_ListGroupsResponse *, NSError *))arg1;
@end

