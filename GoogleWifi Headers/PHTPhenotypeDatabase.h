//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class GTMSQLiteDatabase, NSString, PHTPhenotypeLogger;
@protocol OS_dispatch_queue;

@interface PHTPhenotypeDatabase : NSObject
{
    _Bool _useInMemoryDb;
    _Bool _dbClosed;
    NSObject<OS_dispatch_queue> *_databaseQueue;
    NSObject<OS_dispatch_queue> *_completionQueue;
    PHTPhenotypeLogger *_logger;
    GTMSQLiteDatabase *_db;
    NSString *_databasePath;
}

+ (void)updateDatabaseVersion:(id)arg1;
+ (long long)databaseVersion:(id)arg1;
+ (id)connectToInMemoryDatabaseWithLogger:(id)arg1 error:(id *)arg2;
+ (_Bool)upgradeSchema:(id)arg1 logger:(id)arg2 error:(id *)arg3;
+ (id)connectAndInitializeDatabase:(id)arg1 logger:(id)arg2 error:(id *)arg3;
+ (id)allCreateTableOrIndexQueries;
@property(nonatomic) _Bool dbClosed; // @synthesize dbClosed=_dbClosed;
@property(nonatomic) _Bool useInMemoryDb; // @synthesize useInMemoryDb=_useInMemoryDb;
@property(retain, nonatomic) NSString *databasePath; // @synthesize databasePath=_databasePath;
@property(retain, nonatomic) GTMSQLiteDatabase *db; // @synthesize db=_db;
@property(retain, nonatomic) PHTPhenotypeLogger *logger; // @synthesize logger=_logger;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *completionQueue; // @synthesize completionQueue=_completionQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *databaseQueue; // @synthesize databaseQueue=_databaseQueue;
- (void).cxx_destruct;
- (id)lastErrorString;
- (id)dump:(id *)arg1;
- (id)tableContent:(id)arg1 error:(id *)arg2;
- (id)formattedStringForContents:(id)arg1 columnWidths:(id)arg2;
- (id)columnWidthsForContents:(id)arg1;
- (id)rowContentsFromStatement:(id)arg1 error:(id *)arg2;
- (id)columnNamesFromStatement:(id)arg1 error:(id *)arg2;
- (id)tableNames:(id *)arg1;
- (id)performTransactionInternal:(CDUnknownBlockType)arg1;
- (id)performTransactionSync:(CDUnknownBlockType)arg1;
- (id)performTransactionInsideQueue:(CDUnknownBlockType)arg1 withBackgroundTask:(id)arg2 onFinish:(CDUnknownBlockType)arg3;
- (void)performTransaction:(CDUnknownBlockType)arg1 onFinish:(CDUnknownBlockType)arg2;
- (_Bool)extractOneRow:(id)arg1 foundRow:(_Bool *)arg2 withParameters:(char *)arg3 error:(id *)arg4;
- (_Bool)extractOneRow:(id)arg1 foundRow:(_Bool *)arg2 error:(id *)arg3;
- (_Bool)extractOneRow:(id)arg1 error:(id *)arg2;
- (_Bool)executeSQL:(id)arg1 arguments:(id)arg2 error:(id *)arg3;
- (_Bool)executeSQL:(id)arg1 error:(id *)arg2;
- (id)createStatement:(id)arg1 arguments:(id)arg2 error:(id *)arg3;
- (id)createStatement:(id)arg1 error:(id *)arg2;
- (void)closeDatabase;
- (long long)databaseFileSize;
- (id)db:(id *)arg1;
- (id)initWithInMemoryDatabase:(_Bool)arg1 logger:(id)arg2;
- (id)crossTokens:(id)arg1 version:(long long)arg2 user:(id)arg3 error:(id *)arg4;
- (id)mergeExperimentIDs:(id)arg1;
- (id)removeOldConfigurations;
- (id)removeOldAccountsWithKeepAccounts:(id)arg1;
- (_Bool)findMinimumUncommittedVersionToKeepForPackage:(id)arg1 foundVersion:(_Bool *)arg2 version:(long long *)arg3 error:(id *)arg4;
- (id)setFromSQLQuery:(id)arg1 arguments:(id)arg2 class:(Class)arg3 error:(id *)arg4;
- (id)blobDataSetFromSQLQuery:(id)arg1 arguments:(id)arg2 error:(id *)arg3;
- (id)numberSetFromSQLQuery:(id)arg1 arguments:(id)arg2 error:(id *)arg3;
- (id)stringSetFromSQLQuery:(id)arg1 arguments:(id)arg2 error:(id *)arg3;
- (id)dictionarySetFromSQLQuery:(id)arg1 arguments:(id)arg2 error:(id *)arg3;
- (id)registeredPackageInfos:(id *)arg1;
- (_Bool)committedStateForMultiCommitPackage:(id)arg1 user:(id)arg2 version:(long long *)arg3 error:(id *)arg4;
- (_Bool)committedStateForSingleCommitPackage:(id)arg1 version:(long long *)arg2 user:(id *)arg3 error:(id *)arg4;
- (id)externalExperimentIDsForLogSource:(long long)arg1 existingExperimentIDs:(id)arg2 error:(id *)arg3;
- (id)externalExperimentIDsForLogSource:(long long)arg1 moduleNamespace:(id)arg2 bundleIdentifier:(id)arg3 isBundleScoped:(_Bool)arg4 error:(id *)arg5;
- (id)externalExperimentIDsForFlagOverrides:(_Bool)arg1;
- (id)experimentTokens:(id)arg1 version:(long long)arg2 user:(id)arg3 isCommitted:(_Bool)arg4 error:(id *)arg5;
- (_Bool)tokensForPackage:(id)arg1 version:(long long)arg2 user:(id)arg3 isCommitted:(_Bool)arg4 serverToken:(id *)arg5 diffToken:(id *)arg6 servingVersion:(long long *)arg7 error:(id *)arg8;
- (_Bool)updateSyncedUsers:(id)arg1 isFinished:(_Bool)arg2 error:(id *)arg3;
- (_Bool)updateSyncedPackageInfo:(id)arg1 isFinished:(_Bool)arg2 error:(id *)arg3;
- (_Bool)deleteFlagOverride:(id)arg1 configPackage:(id)arg2 user:(id)arg3 error:(id *)arg4;
- (_Bool)setFlagOverride:(id)arg1 configPackage:(id)arg2 user:(id)arg3 error:(id *)arg4;
- (_Bool)updateSyncedPackageInfos:(id)arg1 isFinished:(_Bool)arg2 error:(id *)arg3;
- (id)flagFromStatement:(id)arg1 error:(id *)arg2;
- (id)flagOverridesForPackage:(id)arg1 user:(id)arg2 isCommitted:(_Bool)arg3 error:(id *)arg4;
- (id)flagsWithoutOverridesForPackage:(id)arg1 version:(long long)arg2 user:(id)arg3 isCommitted:(_Bool)arg4 error:(id *)arg5;
- (id)flagsForPackage:(id)arg1 version:(long long)arg2 user:(id)arg3 isCommitted:(_Bool)arg4 error:(id *)arg5;
- (long long)changeCount:(id *)arg1;
- (_Bool)requestTag:(id *)arg1 user:(id)arg2 error:(id *)arg3;

@end

