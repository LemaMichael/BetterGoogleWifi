//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class GTLRAccesspoints_GetSpeedTestResultsResponse, GTLRAccesspoints_ListInsightCardsResponse, JETStationInfoCache, NSDate, NSMutableArray, NSMutableDictionary, NSString;
@protocol JETUserStateProtocol;

@interface JETInsightsDataCache : NSObject
{
    _Bool _insightRefreshInProgress;
    _Bool _historicalSpeedTestRefreshInProgress;
    GTLRAccesspoints_ListInsightCardsResponse *_lastInsightsResponse;
    NSDate *_lastInsightsRefreshTime;
    NSMutableDictionary *_usageWindowCaches;
    GTLRAccesspoints_GetSpeedTestResultsResponse *_lastHistoricalSpeedTestResponse;
    NSDate *_lastHistoricalSpeedTestRefreshTime;
    JETStationInfoCache *_stationInfoCache;
    NSMutableDictionary *_meshSpeedTestCaches;
    NSString *_groupID;
    id <JETUserStateProtocol> _userState;
    NSMutableArray *_insightRefreshCallbacks;
    NSMutableArray *_historicalSpeedTestRefreshCallbacks;
}

@property(nonatomic) _Bool historicalSpeedTestRefreshInProgress; // @synthesize historicalSpeedTestRefreshInProgress=_historicalSpeedTestRefreshInProgress;
@property(retain, nonatomic) NSMutableArray *historicalSpeedTestRefreshCallbacks; // @synthesize historicalSpeedTestRefreshCallbacks=_historicalSpeedTestRefreshCallbacks;
@property(nonatomic) _Bool insightRefreshInProgress; // @synthesize insightRefreshInProgress=_insightRefreshInProgress;
@property(retain, nonatomic) NSMutableArray *insightRefreshCallbacks; // @synthesize insightRefreshCallbacks=_insightRefreshCallbacks;
@property(nonatomic) __weak id <JETUserStateProtocol> userState; // @synthesize userState=_userState;
@property(copy, nonatomic) NSString *groupID; // @synthesize groupID=_groupID;
@property(retain, nonatomic) NSMutableDictionary *meshSpeedTestCaches; // @synthesize meshSpeedTestCaches=_meshSpeedTestCaches;
@property(retain, nonatomic) JETStationInfoCache *stationInfoCache; // @synthesize stationInfoCache=_stationInfoCache;
@property(retain, nonatomic) NSDate *lastHistoricalSpeedTestRefreshTime; // @synthesize lastHistoricalSpeedTestRefreshTime=_lastHistoricalSpeedTestRefreshTime;
@property(retain, nonatomic) GTLRAccesspoints_GetSpeedTestResultsResponse *lastHistoricalSpeedTestResponse; // @synthesize lastHistoricalSpeedTestResponse=_lastHistoricalSpeedTestResponse;
@property(retain, nonatomic) NSMutableDictionary *usageWindowCaches; // @synthesize usageWindowCaches=_usageWindowCaches;
@property(retain, nonatomic) NSDate *lastInsightsRefreshTime; // @synthesize lastInsightsRefreshTime=_lastInsightsRefreshTime;
@property(retain, nonatomic) GTLRAccesspoints_ListInsightCardsResponse *lastInsightsResponse; // @synthesize lastInsightsResponse=_lastInsightsResponse;
- (void).cxx_destruct;
- (id)usageWindowSelectorAccessibilityIntervalForUsageWindow:(id)arg1;
- (id)usageWindowSelectorAccessibilityLabelForUsageWindow:(id)arg1;
- (id)usageWindowSelectorStringForUsageWindow:(id)arg1;
- (_Bool)needsSpeedTestHistoryRefresh;
- (_Bool)needsInsightsRefresh;
- (id)cachedStations;
- (unsigned long long)numberOfConnectedStations;
- (id)stationWithID:(id)arg1;
- (id)meshSpeedTestResultForClientAP:(id)arg1 serverAP:(id)arg2;
- (id)usageDataPointForStation:(id)arg1 usageWindow:(id)arg2;
- (id)totalPerStationTrafficForUsageWindow:(id)arg1;
- (id)totalWANTrafficForUsageWindow:(id)arg1;
- (id)WANTrafficForUsageWindow:(id)arg1;
- (id)processHistoricalSpeedTestResults;
- (void)fetchDetailsForStation:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)clearRealtimeMetricsStationCache;
- (_Bool)shouldRefresh;
- (void)refreshStationList:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)refreshHistoricalSpeedTestMetrics:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)refreshMeshSpeedTestResultForClientAP:(id)arg1 serverAP:(id)arg2 forced:(_Bool)arg3 withCompletion:(CDUnknownBlockType)arg4;
- (void)refreshUsageWindow:(id)arg1 forced:(_Bool)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)refreshInsights:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (_Bool)hasStationListResponse;
- (_Bool)hasSpeedTestResponse;
- (_Bool)hasResponseForUsageWindow:(id)arg1;
- (id)initWithGroupID:(id)arg1 userState:(id)arg2;
- (id)init;

@end

